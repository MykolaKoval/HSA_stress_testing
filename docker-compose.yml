version: '3.6'
services:
  telegraf:
    image: telegraf:latest
    user: root
    entrypoint: "telegraf"
    volumes:
    - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '127.0.0.1:8125:8125/udp'
    depends_on:
      - influxdb
    links:
      - influxdb
    networks:
      - backend

  influxdb:
    image: influxdb:1.8-alpine
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb
    networks:
      - backend

  grafana:
    image: grafana/grafana:8.0.2
    env_file: configuration.env
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    depends_on:
      - influxdb
    links:
      - influxdb
    networks:
      - backend

  mongo:
    image: mongo:6.0
    env_file: configuration.env
    healthcheck:
      test:
        ["CMD-SHELL", "mongosh -u $$MONGO_USER -p $$MONGO_PASSWORD --quiet localhost/test_db --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb_data:/data/db/
      - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - backend

  hsa-app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: configuration.env
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - backend

volumes:
  grafana_data: {}
  influxdb_data: {}
  mongodb_data:


networks:
  backend:
    driver: bridge
